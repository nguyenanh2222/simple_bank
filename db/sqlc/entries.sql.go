// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: entries.sql

package db

import (
	"context"
)

const createEntrie = `-- name: CreateEntrie :one
INSERT INTO entries (
  account_id, amnount
) VALUES (
  $1, $2
)
RETURNING id, account_id, amnount, created_at
`

type CreateEntrieParams struct {
	AccountID int64 `json:"account_id"`
	Amnount   int64 `json:"amnount"`
}

func (q *Queries) CreateEntrie(ctx context.Context, arg CreateEntrieParams) (Entry, error) {
	row := q.db.QueryRowContext(ctx, createEntrie, arg.AccountID, arg.Amnount)
	var i Entry
	err := row.Scan(
		&i.ID,
		&i.AccountID,
		&i.Amnount,
		&i.CreatedAt,
	)
	return i, err
}

const getEntrie = `-- name: GetEntrie :one
SELECT id, account_id, amnount, created_at FROM entries
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetEntrie(ctx context.Context, id int64) (Entry, error) {
	row := q.db.QueryRowContext(ctx, getEntrie, id)
	var i Entry
	err := row.Scan(
		&i.ID,
		&i.AccountID,
		&i.Amnount,
		&i.CreatedAt,
	)
	return i, err
}
